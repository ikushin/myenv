#
# Git key binds
if git --version |& grep -Pq "1.[7]"; then
    bindkey -s '^G^S' "git status --short . "
    bindkey -s "^[s"  "git status --short "
else
    bindkey -s '^G^S' "git status --short --branch . "
    bindkey -s "^[s"  "git status --short --branch "
fi

bindkey -s "^[b"  "git branch --verbose --all "
bindkey -s "^G^B" "git branch --verbose --all"
bindkey -s "^[f"  "gitdiff "
bindkey -s "^[p"  "git pull "
bindkey -s "^G^P" "git push origin master "
bindkey -s "^G."  'cd $(git rev-parse --show-toplevel) '
bindkey -s "^G^R" "git reset --hard "
bindkey -s "^[a"  "git add "
bindkey -s "^G^A" "git add "
bindkey -s "^G^T" 'git cat-file -p HEAD\:file '
bindkey -s "^G^I" "test -d .git || git init; echo '.*' >.gitignore "

bindkey -s "^[c"    'git checkout '
bindkey -s "^[c^[c" 'git commit -m "Update" '
bindkey -s "^[v"    "git checkout "

bindkey -s "^[l"    'git log --color=always --oneline --decorate -$((LINES-10)) '
#bindkey -s "^G^L"   'git log --color=always --name-status --no-merges '

# git diff
if git --version |& grep -Pq "1.[78]"; then
    bindkey -s "^G^L^L" 'git log --color=always -p --ignore-space-change --ignore-all-space --ignore-space-at-eol --break-rewrites -t --no-merges '
    alias gitdiff='git diff --ignore-space-change --ignore-all-space --ignore-space-at-eol --color=auto -U10'
    alias gll='git log --color=auto -p --ignore-space-change --ignore-all-space --ignore-space-at-eol --break-rewrites -t --no-merges'
else
    bindkey -s "^G^L^L" 'git log --color=always -p --ignore-space-change --ignore-all-space --ignore-blank-lines --ignore-space-at-eol --break-rewrites -t --no-merges '
    alias gitdiff='git diff --ignore-space-change --ignore-all-space --ignore-blank-lines --ignore-space-at-eol --color=auto -U10'
    alias gll='git log --color=auto -p --ignore-space-change --ignore-all-space --ignore-blank-lines --ignore-space-at-eol --break-rewrites -t --no-merges'
fi
alias git_diff='gitdiff'
alias gitdiff0='gitdiff -U100'
alias git_diff_stage='gitdiff --cached'

# Git aliases
alias gd='git dsf'
alias gc='git checkout'
alias gcm='git checkout master'
alias gl='git log --color=always --name-status --no-merges'
alias gld="git log --oneline --pretty=format:'%h [%cd] %s' --date=format:'%Y/%m/%d %H:%M'"
alias gp='git push origin master'
alias ga='git add '
alias git_add_hunk='git add -p'

# tag
alias git_tag='git tag -ln --sort=-v:refname'

# stash
alias git_stash_save='git stash save'
alias git_stash_push='git_stash_save'
alias git_stash_list='git stash list'
alias git_stash_pop='git stash pop'

alias gsp='git_stash_save'
alias gspop='git_stash_pop'

# clean
alias git_clean_dryrun='git clean -nd'
alias git_clean_force='git clean -fd'

# config
alias git_config_list='git config --list'
alias git_config_edit='git config -ef ~/.gitconfig'
alias git_config_init='git config --global user.name "First-name Family-name"; git config --global user.email "username@example.com"'

# branch
alias git_branch='git branch --all'
alias git_branch_rename='git branch -m'
alias gbl='git branch --verbose --all'
alias gb='git branch'

# misc
alias git_unstage='git reset HEAD'
alias git_reference_log='git reflog'
alias git_cat_object='git cat-file -p'
alias git_modify_message='git commit --amend'
alias git_squash_commit='git rebase -i HEAD~~~~~~~~~~'
alias git_untrack='git update-index --skip-worktree'

# あまり使わないもの
#alias gs='git status --short --branch .'
#alias wgd='gitdiff --word-diff'
#alias git_unstage='git reset HEAD'

# functions
alias _gdiff='gitdiff --no-index'
function d() {
    a=${1:-"a"}
    b=${2:-"b"}
    _gdiff $a $b
}
alias myd='d'

function d0() {
    a=${1:-"a"}
    b=${2:-"b"}
    _gdiff -U100 $a $b
}

function rd() {
    a=${1:-"a"}
    b=${2:-"b"}
    _gdiff $b $a
}

function rd0() {
    a=${1:-"a"}
    b=${2:-"b"}
    _gdiff -U100 $b $a
}

function git_init_bare() {
    [[ $# != 1 ]] && {echo "リポジトリ名入れて!"; return;}
    local repo=$1
    mkdir $repo.git
    git init --bare $repo.git
}

function git_clone_bare() {
    [[ $# != 1 ]] && {echo "リポジトリ名入れて!"; return;}
    local repo=$1
    git clone --bare $repo{,.git}
}


#bg_color=black
#bg_color=red
#bg_color=green
#bg_color=yellow
bg_color=blue
#bg_color=magenta
#bg_color=cyan
#bg_color=white

#fg_color=black
#fg_color=red
#fg_color=green
#fg_color=yellow
#fg_color=blue
#fg_color=magenta
#fg_color=cyan
fg_color=white

#PROMPT='[%n@%{$bg['$bg_color']%}%m%{$reset_color%}]%(#.#.$) '
PROMPT='[%n@%{$fg['$fg_color']$bg['$bg_color']%}%m%{$reset_color%}]%(#.#.$) '

######################
# show current branch
#
# @see
# http://stackoverflow.com/questions/1128496/to-get-a-prompt-which-indicates-git-branch-in-zsh

setopt prompt_subst
autoload -Uz vcs_info
zstyle ':vcs_info:*' actionformats \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'

zstyle ':vcs_info:*' enable git cvs svn

# or use pre_cmd, see man zshcontrib
vcs_info_wrapper() {
  vcs_info
  if [ -n "$vcs_info_msg_0_" ]; then
      echo "%{$fg[grey]%}${vcs_info_msg_0_}%{$reset_color%}$del"
  else
      echo '[%~]'
  fi
}
RPROMPT=$'$(vcs_info_wrapper)'

